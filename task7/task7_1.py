# 1. Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()),
# который должен принимать данные (список списков) для формирования матрицы.
# Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
# Примеры матриц вы найдете в методичке.
# Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
# Далее реализовать перегрузку метода __add__() для реализации операции сложения двух объектов класса Matrix
# (двух матриц). Результатом сложения должна быть новая матрица.
# Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой матрицы
# складываем с первым элементом первой строки второй матрицы и т.д.

class Matrix:
    print('\nЗдравствуйте! Это простой скрипт сложения и вычитания матриц 2 х 2.\n'
          'Введите три значения первой строки матрицы в [], далее поставьте запятую,\n'
          'Далее повторите те же действия со второй и третьей строкой.\n'
          'Внимание! Складывать и вычитать можно матрицы только одинакового размера!\n')

    def __init__(self, matrix_1, matrix_2):
        self.matrix_1 = matrix_1
        self.matrix_2 = matrix_2
        # self.matrix_3 = matrix_3
        self.new_matrix = []

    def __str__(self):
        return f'Матрица вида: \n{self.matrix_1} \n{self.matrix_2}'

    def __add__(self, other):
        self.new_matrix.append(other)


test = Matrix([12, 12, 43], [34, 34, 34])
print(test)

test + (test.matrix_1[0] + test.matrix_2[0],
        test.matrix_1[1] + test.matrix_2[1],
        test.matrix_1[2] + test.matrix_2[2])

print('\n', test.new_matrix)
